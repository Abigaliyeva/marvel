{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/pages/404.js","components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/singleComicLayout/SingleComicLayout.js","components/pages/singleCharacterLayout/singleCharacterLayout.js","components/pages/SinglePage.js","components/app/App.js","index.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","Page404","to","AppHeader","className","end","isActive","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setLoading","error","setError","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","getAllComics","_transformComics","getComics","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imageStyle","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","allCharRefs","useRef","focusOnChar","current","forEach","item","classList","remove","add","focus","array","i","tabIndex","ref","el","onCharSelected","onKeyDown","e","key","renderCharList","disabled","Skeleton","comicsLinkList","comicId","resourceURI","CharInfo","upDateChar","charId","setContent","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","CharSearchForm","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","placeholder","component","MainPage","selectedChar","Helmet","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","arr","renderItems","ComicsPage","SingleComicLayout","SingleCharacterLayout","SinglePage","dataType","useParams","setData","updateData","onDataLoaded","lazy","App","basename","fallback","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0f5697.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import ErrorMessage from \"../errorMessage/ErrorMessage\"\nimport { Link } from \"react-router-dom\"\n\nconst Page404 = () => {\n    return (\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px',\n             'marginTop': '30px'}} to=\"/\">Back to main page</Link>\n        </div>\n    )\n}\n\nexport default Page404;","import { Link, NavLink  } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                        end \n                        style={({ isActive }) => ({'color': isActive ? '#9f0013' : 'inherit'})} \n                        to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                        style={({ isActive }) => ({'color': isActive ? '#9f0013' : 'inherit'})} \n                        to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=467220b8e7928499b9da221cbe77ad2d';\n    const _baseOffset = 210;\n\n    // getResource = async (url) => {\n    //     let res = await fetch(url);\n\n    //     if (!res.ok) {\n    //         throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n    //     }\n\n    //     return await res.json();\n    // }\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n    }\n\n    const  _transformCharacter = (char) => {\n        return {\n            name: char.name,\n            description: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            id: char.id,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t}\n\n    return {loading, \n            error, \n            getAllCharacters, \n            getCharacter, \n            getCharacterByName, \n            clearError, \n            getAllComics, \n            getComics, \n            process, \n            setProcess}\n}\n\nexport default useMarvelService;","import { useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n    \n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n            \n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\n            }    \n            \n            const data = await response.json();\n            setLoading(false);\n            return data;\n        } catch (e) {\n            setLoading(false);\n            setProcess('error');\n            setError(e.message);\n            throw e;\n        }\n    }, [])\n\n    const clearError = useCallback(() => {\n        setError(null);\n        setProcess('loading');\n    }, []);\n\n    return {loading, request, error, clearError, process, setProcess}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n \n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then((onCharLoaded))\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n    return (\n        <div className=\"randomchar\">\n\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imageStyle = {\n        'objectFit': 'cover'\n    };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imageStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imageStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>   \n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst CharList = (props) => {\n\t/* state = {\n\t\tcharlist: [],\n\t\tloading: true,\n\t\terror: false,\n\t\tnewItemLoading: false,\n\t\toffset: 210,\n\t\tcharEnded: false\n\t} */\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\t\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false; \n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended);\n\t}\n\tconst allCharRefs = useRef([]);\n\tconst focusOnChar = (id) => {\n\t\tallCharRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n\t\tallCharRefs.current[id].classList.add('char__item_selected');\n\t\tallCharRefs.current[id].focus();\n\t}\n\n\tfunction renderCharList (array) {\n\t\tconst items = array.map((item, i) => {\n\t\t\tlet imageStyle = {\n\t\t\t\t'objectFit': 'cover'\n\t\t\t};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timageStyle = {'objectFit' : 'unset'};\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li \n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => allCharRefs.current[i] = el}\n\t\t\t\t\tclassName=\"char__item\" \n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnChar(i)\n\t\t\t\t\t}} \n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnChar(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imageStyle}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t);\n\t}\n\tconst items = renderCharList(charList);\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button \n\t\t\t\tclassName=\"button button__main button__long\" \n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{'display': charEnded ? 'none' : 'block'}}\n\t\t\t\tonClick={() => {onRequest(offset)}}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n\t\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n\n    const {getCharacter, clearError, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        upDateChar();\n    }, [props.charId])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const upDateChar = () => {\n        const {charId} = props;\n        if(!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const setContent = (process, char) => {\n        switch (process) {\n            case 'waiting': \n                return <Skeleton/>;\n            case 'loading':\n                return <Spinner/>;\n            case 'confirmed':\n                return <View char={char}/>;\n            case 'error': \n                return  <ErrorMessage/>;\n            default:\n                throw new Error('Unexpected process state');\n        }\n    }\n\n    return (\n        <div className=\"char__info\">\n            {setContent(process, char)}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    \n    let imageStyle = {\n        'objectFit': 'cover'\n    };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imageStyle = {'objectFit' : 'contain'};\n    }\n\n    const comicsLinkList = comics.map((item, i) => {\n        const comicId = item.resourceURI.slice(43);\n        // eslint-disable-next-line\n        if (i > 9) return; \n        return (\n            <li key={i} className=\"char__comics-item\">\n                <Link to={`/comics/${comicId}`}>{item.name}</Link>\n            </li>\n        )\n    })\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imageStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"There is no comics with this character\"}\n                {\n                    comicsLinkList\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error: true}\n    }\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charSearchForm.scss';\n\nconst CharSearchForm = () => {\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = (name) => {\n        clearError();\n\n        getCharacterByName(name)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n    const results = !char ? null : char.length > 0 ?\n                    <div className=\"char__search-wrapper\">\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                            <div className=\"inner\">To page</div>\n                        </Link>\n                    </div> : \n                    <div className=\"char__search-error\">\n                        The character was not found. Check the name and try again\n                    </div>;\n\n    return (\n        <div className=\"char__search-form\">\n            <Formik\n                initialValues = {{\n                    charName: ''\n                }}\n                validationSchema = {Yup.object({\n                    charName: Yup.string().required('This field is required')\n                })}\n                onSubmit = { ({charName}) => {\n                    updateChar(charName);\n                }}\n            >\n                <Form>\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\n                    <div className=\"char__search-wrapper\">\n                        <Field \n                            id=\"charName\" \n                            name='charName' \n                            type='text' \n                            placeholder=\"Enter name\"/>\n                        <button \n                            type='submit' \n                            className=\"button button__main\"\n                            disabled={loading}>\n                            <div className=\"inner\">find</div>\n                        </button>\n                    </div>\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\n                </Form>\n            </Formik>\n            {results}\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default CharSearchForm","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport { Helmet } from 'react-helmet';\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\nconsole.log('mp')\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Marvel information portal\"\n                />\n                <title>Marvel information portal</title>\n            </Helmet>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <div>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                            <CharSearchForm/>\n                    </ErrorBoundary>\n                </div>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t}\n\n    const onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false; \n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList])\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 8);\n        setComicsEnded(ended);\n\t}\n\n    function renderItems (arr) {\n        const items = arr.map(item => {\n            return (\n                <li className=\"comics__item\" key={item.id}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        ) \n    }\n\n    const items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n            <button className=\"button button__main button__long\" disabled={newItemLoading}\n\t\t\t\tstyle={{'display': comicsEnded ? 'none' : 'block'}}\n\t\t\t\tonClick={() => {onRequest(offset)}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with comics\"\n                />\n                <title>Comics Page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","import { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport './singleComicPage.scss';\n\nconst SingleComicLayout = ({data}) => {\n\n    const {thumbnail, title, description, pageCount, price, language} = data;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`${title} comics book`}\n                />\n                <title>{title}</title>\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicLayout;","import { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport './singleCharacterPage.scss';\nimport { Helmet } from 'react-helmet';\n\nconst SingleCharacterLayout = ({data}) => {\n    \n    const {thumbnail, name, description} = data;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content={`${name} character in Marvel`}\n                />\n                <title>{name}</title>\n            </Helmet>\n            <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{name}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleCharacterLayout;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({Component, dataType}) => {\n        const {id} = useParams();\n        const [data, setData] = useState(null);\n        const {loading, error, getComics, getCharacter, clearError} = useMarvelService();\n\n        useEffect(() => {\n            updateData();\n        }, [id])\n        console.log('render');\n        const updateData = () => {\n            clearError();\n\n            switch (dataType) {\n                case 'comic':\n                    getComics(id).then(onDataLoaded);\n                    break;\n                case 'character':\n                    getCharacter(id).then(onDataLoaded);\n            }\n        }\n\n        const onDataLoaded = (data) => {\n            setData(data);\n        }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n        return (\n            <>\n                <AppBanner/>\n                {errorMessage}\n                {spinner}\n                {content}\n            </>\n        )\n}\n\nexport default SinglePage;","import { lazy, Suspense } from 'react';\nimport {BrowserRouter as Router, Route, Routes, HashRouter} from 'react-router-dom'\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport Spinner from '../spinner/Spinner';\nimport {MainPage, ComicsPage, SingleComicLayout, SingleCharacterLayout, SinglePage} from '../pages';\n\nconst Page404 = lazy (() => import('../pages/404'));\n\nconst App = () => {\n\n    return (\n        <Router>\n            <HashRouter basename=\"/\">\n                <div className=\"app\">\n                    <AppHeader/>\n                    <main>\n                        <Suspense fallback={<Spinner/>}> \n                            <Routes>\n                                <Route path=\"/\" element={<MainPage/>}/>\n                                <Route path=\"/comics\" element={<ComicsPage/>}/>\n                                {/* <Route path=\"/comics/:comicId\" element={<SingleComicPage />}/>\n                                <Route path=\"/characters/:charId\" element={<SingleCharacterPage/>}/> */}\n                                <Route path=\"/comics/:id\" element={<SinglePage Component={SingleComicLayout} dataType=\"comic\"/>}/>\n                                <Route path=\"/characters/:id\" element={<SinglePage Component={SingleCharacterLayout} dataType='character'/>}/> \n                                <Route path=\"*\" element={<Page404/>}/>\n                            </Routes>\n                        </Suspense>\n                    </main>\n                </div>\n            </HashRouter>\n            \n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n \t\t<App />\n \t</React.StrictMode>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}